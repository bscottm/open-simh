# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

.shared_windows_runners:
  tags:
    - shared-windows
    - windows-1809
  variables:
    VCPKG_ROOT: C:\vcpkg

.shared_linux_runners:
  tags:
    - saas-linux-small-amd64

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

## The Windows build
cmake-windows-native:
  extends:
    - .shared_windows_runners
  stage: build
  script:
    - |
      if (!(Test-Path Env:\VCPKG_ROOT)) {
        New-Item -Force -Path Env:\VCPKG_ROOT -Value ${VCPKG_ROOT}
      }
      pushd ${VCPKG_ROOT}
      git checkout master
      git pull --rebase
      popd
    - ./cmake/cmake-builder.ps1 -flavor vs2019 -config Release -clean -parallel -lto -verbose -notest -cpack_suffix win32-native

cmake-windows-native-test:
  extends:
    - .shared_windows_runners
  stage: test
  script:
    - ./cmake/cmake-builder.ps1 -flavor vs2022 -config Release -testOnly

cmake-linux-build:
  extends:
    - .shared_linux_runners
  image: gcc:latest
  stage: build
  script:
    - .travis/deps.sh linux
    - sudo apt install -ym ninja-build
    - cmake/cmake-builder.sh --config Release --flavor ninja --lto --notest --parallel --verbose --cpack_suffix x86_64-linux

cmake-linux-test:
  extends:
    - .shared_linux_runners
  stage: test
  script:
    - cmake/cmake-builder.sh --config Release --flavor ninja --testonly

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
